#!/usr/bin/env bash
PROCCESS=$(ps -eaf | fgrep "$(basename $0)"| grep -v grep | wc -l)
LOG_CALL="{{ data_dir }}/.scripts/callback.log"
LOG_DATA="{{ data_dir }}/.scripts/data.log"
LOG_MYSQL="{{ data_dir }}/.scripts/mysql.log"
IGNORE_DB="(^mysql|sys|_schema$|-old$|-recovery$)"
REF_DB="ensembl ensembl_hg38 forome hgmd_phenbase hgmd_pro hgmd_snp hgmd_views"

function sync_data() {
        aws --endpoint-url {{ endpoint_url }} s3 sync s3://{{ bucket_annotation }}{{ data_dir }} {{ data_dir }} 2>&1 >> $LOG_DATA
        echo "$(date '+%B %V %T.%3N:') Data has been synced" >> $LOG_MYSQL
}

function list_db() {
	local show_databases_sql="SHOW DATABASES WHERE \`Database\` NOT REGEXP '$IGNORE_DB'"
	echo $(sudo mysql -e "$show_databases_sql"|awk -F " " '{if (NR!=1) print $1}')
}

function restore_db() {
	if [[ $REF_DB == "$(list_db)" ]]; then
	        echo "$(date '+%B %V %T.%3N:') Databases already exist" >> $LOG_MYSQL
	else
	        gunzip < {{ download_dir }}/mysqldump.sql.gz | mysql 2>&1 >> $LOG_MYSQL
	        echo "$(date '+%B %V %T.%3N:') Databases has been restored" >> $LOG_MYSQL
	fi
}

function trigger_pipeline() {
        curl -s --request POST --user '':'{{ azure_pat }}' \
        --header "Content-Type: application/json" \
        --data '{
                "defenition": {
                        "id": {{ azure_pipeline_id }}
                },
                "templateParameters": {
                        "taskData": '"$taskData"',
                        "taskMysql": '"$taskMysql"'
                }
                }' \
        "https://dev.azure.com/{{ azure_org }}/{{ azure_prj }}/_apis/pipelines/{{ azure_pipeline_id }}/runs?api-version=6.1-preview.1"
}

function callback() {
	if [[ $PROCCESS -gt 2 ]]; then
	        echo "$(date '+%B %V %T.%3N:') Another instance of script already exist! Exiting" >> $LOG_CALL
	        exit
	else
                sync_data
                taskData=$?
		restore_db
                taskMysql=$?
                trigger_pipeline
                echo "$(date '+%B %V %T.%3N:') Callback script succeeded" >> $LOG_CALL
	fi
}

callback